/*
Shutterstock API Explorer

The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.

The version of the OpenAPI document: 1.1.32


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { Language } from './language';
import { SearchImageContributorCountry } from './search-image-contributor-country';
import { SearchImageRegion } from './search-image-region';

/**
 * Data required to search for an image
 * @export
 * @interface SearchImage
 */
export interface SearchImage {
    /**
     * Show images added on the specified date
     * @type {string}
     * @memberof SearchImage
     */
    'added_date'?: string;
    /**
     * Show images added before the specified date
     * @type {string}
     * @memberof SearchImage
     */
    'added_date_end'?: string;
    /**
     * Show images added on or after the specified date
     * @type {string}
     * @memberof SearchImage
     */
    'added_date_start'?: string;
    /**
     * Show images with the specified aspect ratio, using a positive decimal of the width divided by the height, such as 1.7778 for a 16:9 image
     * @type {number}
     * @memberof SearchImage
     */
    'aspect_ratio'?: number;
    /**
     * Show images with the specified aspect ratio or lower, using a positive decimal of the width divided by the height, such as 1.7778 for a 16:9 image
     * @type {number}
     * @memberof SearchImage
     */
    'aspect_ratio_max'?: number;
    /**
     * Show images with the specified aspect ratio or higher, using a positive decimal of the width divided by the height, such as 1.7778 for a 16:9 image
     * @type {number}
     * @memberof SearchImage
     */
    'aspect_ratio_min'?: number;
    /**
     * Show only authentic images
     * @type {boolean}
     * @memberof SearchImage
     */
    'authentic'?: boolean;
    /**
     * Show images with the specified Shutterstock-defined category; specify a category name or ID
     * @type {string}
     * @memberof SearchImage
     */
    'category'?: string;
    /**
     * Specify either a hexadecimal color in the format \'4F21EA\' or \'grayscale\'; the API returns images that use similar colors
     * @type {string}
     * @memberof SearchImage
     */
    'color'?: string;
    /**
     * Show images with the specified contributor names or IDs, allows multiple
     * @type {Array<string>}
     * @memberof SearchImage
     */
    'contributor'?: Array<string>;
    /**
     * 
     * @type {SearchImageContributorCountry}
     * @memberof SearchImage
     */
    'contributor_country'?: SearchImageContributorCountry;
    /**
     * Fields to display in the response; see the documentation for the fields parameter in the overview section
     * @type {string}
     * @memberof SearchImage
     */
    'fields'?: string;
    /**
     * (Deprecated; use height_from and height_to instead) Show images with the specified height
     * @type {number}
     * @memberof SearchImage
     */
    'height'?: number;
    /**
     * Show images with the specified height or larger, in pixels
     * @type {number}
     * @memberof SearchImage
     */
    'height_from'?: number;
    /**
     * Show images with the specified height or smaller, in pixels
     * @type {number}
     * @memberof SearchImage
     */
    'height_to'?: number;
    /**
     * Show images of the specified type
     * @type {Array<string>}
     * @memberof SearchImage
     */
    'image_type'?: Array<SearchImageImageTypeEnum>;
    /**
     * Hide results with potentially unsafe keywords
     * @type {boolean}
     * @memberof SearchImage
     */
    'keyword_safe_search'?: boolean;
    /**
     * Language code
     * @type {Language}
     * @memberof SearchImage
     */
    'language'?: Language;
    /**
     * Show only images with the specified license
     * @type {Array<string>}
     * @memberof SearchImage
     */
    'license'?: Array<SearchImageLicenseEnum>;
    /**
     * Show image results with the specified model IDs
     * @type {Array<string>}
     * @memberof SearchImage
     */
    'model'?: Array<string>;
    /**
     * Show image results with horizontal or vertical orientation
     * @type {string}
     * @memberof SearchImage
     */
    'orientation'?: SearchImageOrientationEnum;
    /**
     * Page number
     * @type {number}
     * @memberof SearchImage
     */
    'page'?: number;
    /**
     * Show images that feature people of the specified age category
     * @type {string}
     * @memberof SearchImage
     */
    'people_age'?: SearchImagePeopleAgeEnum;
    /**
     * Show images with people of the specified ethnicities, or start with NOT to show images without those ethnicities
     * @type {Array<string>}
     * @memberof SearchImage
     */
    'people_ethnicity'?: Array<SearchImagePeopleEthnicityEnum>;
    /**
     * Show images with people of the specified gender
     * @type {string}
     * @memberof SearchImage
     */
    'people_gender'?: SearchImagePeopleGenderEnum;
    /**
     * Show images of people with a signed model release
     * @type {boolean}
     * @memberof SearchImage
     */
    'people_model_released'?: boolean;
    /**
     * Show images with the specified number of people
     * @type {number}
     * @memberof SearchImage
     */
    'people_number'?: number;
    /**
     * Number of results per page
     * @type {number}
     * @memberof SearchImage
     */
    'per_page'?: number;
    /**
     * One or more search terms separated by spaces; you can use NOT to filter out images that match a term
     * @type {string}
     * @memberof SearchImage
     */
    'query'?: string;
    /**
     * 
     * @type {SearchImageRegion}
     * @memberof SearchImage
     */
    'region'?: SearchImageRegion;
    /**
     * Enable or disable safe search
     * @type {boolean}
     * @memberof SearchImage
     */
    'safe'?: boolean;
    /**
     * Sort by
     * @type {string}
     * @memberof SearchImage
     */
    'sort'?: SearchImageSortEnum;
    /**
     * Spellcheck the search query and return results on suggested spellings
     * @type {boolean}
     * @memberof SearchImage
     */
    'spellcheck_query'?: boolean;
    /**
     * Amount of detail to render in the response
     * @type {string}
     * @memberof SearchImage
     */
    'view'?: SearchImageViewEnum;
    /**
     * (Deprecated; use width_from and width_to instead) Show images with the specified width
     * @type {number}
     * @memberof SearchImage
     */
    'width'?: number;
    /**
     * Show images with the specified width or larger, in pixels
     * @type {number}
     * @memberof SearchImage
     */
    'width_from'?: number;
    /**
     * Show images with the specified width or smaller, in pixels
     * @type {number}
     * @memberof SearchImage
     */
    'width_to'?: number;
}

type SearchImageImageTypeEnum = 'photo' | 'illustration' | 'vector'
type SearchImageLicenseEnum = 'commercial' | 'editorial' | 'enhanced'
type SearchImageOrientationEnum = 'horizontal' | 'vertical'
type SearchImagePeopleAgeEnum = 'infants' | 'children' | 'teenagers' | '20s' | '30s' | '40s' | '50s' | '60s' | 'older'
type SearchImagePeopleEthnicityEnum = 'african' | 'african_american' | 'black' | 'brazilian' | 'chinese' | 'caucasian' | 'east_asian' | 'hispanic' | 'japanese' | 'middle_eastern' | 'native_american' | 'pacific_islander' | 'south_asian' | 'southeast_asian' | 'other' | 'NOT african' | 'NOT african_american' | 'NOT black' | 'NOT brazilian' | 'NOT chinese' | 'NOT caucasian' | 'NOT east_asian' | 'NOT hispanic' | 'NOT japanese' | 'NOT middle_eastern' | 'NOT native_american' | 'NOT pacific_islander' | 'NOT south_asian' | 'NOT southeast_asian' | 'NOT other'
type SearchImagePeopleGenderEnum = 'male' | 'female' | 'both'
type SearchImageSortEnum = 'newest' | 'popular' | 'relevance' | 'random'
type SearchImageViewEnum = 'minimal' | 'full'


