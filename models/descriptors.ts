/*
Shutterstock API Explorer

The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.

The version of the OpenAPI document: 1.1.32


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { Bands } from './bands';
import { Instruments } from './instruments';
import { Preview } from './preview';

/**
 * Information about a descriptor
 * @export
 * @interface Descriptors
 */
export interface Descriptors {
    /**
     * Tags that describe the descriptor
     * @type {Array<string>}
     * @memberof Descriptors
     */
    'tags'?: Array<string>;
    /**
     * The average ratio of the length of the music to the time it takes to render; for example, a render speed of 3.0 generates 30 seconds of music in about 10 seconds
     * @type {number}
     * @memberof Descriptors
     */
    'average_render_speed'?: number;
    /**
     * The bands that are available to use this descriptor
     * @type {Array<Bands>}
     * @memberof Descriptors
     */
    'bands'?: Array<Bands>;
    /**
     * The ID of the descriptor
     * @type {string}
     * @memberof Descriptors
     */
    'id'?: string;
    /**
     * The instruments that can play with this descriptor
     * @type {Array<Instruments>}
     * @memberof Descriptors
     */
    'instruments'?: Array<Instruments>;
    /**
     * The maximum beats per minute that the descriptor is intended to be used with
     * @type {number}
     * @memberof Descriptors
     */
    'max_tempo'?: number;
    /**
     * The minimum beats per minute that the descriptor is intended to be used with
     * @type {number}
     * @memberof Descriptors
     */
    'min_tempo'?: number;
    /**
     * The name of the descriptor
     * @type {string}
     * @memberof Descriptors
     */
    'name'?: string;
    /**
     * Preview of the descriptor
     * @type {Array<Preview>}
     * @memberof Descriptors
     */
    'previews'?: Array<Preview>;
}

